{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\OneDrive\\\\Documentos\\\\stareng_tasks_keeper_app\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport CreateSection from \"./CreateSection\";\nimport Section from \"./Section\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:8080/';\n//const URL = 'https://timing-control.herokuapp.com/';\n\nfunction App() {\n  _s();\n  //const DONE = \"Done / Deleted\";\n  const [notes, setNotes] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [user, setUser] = useState();\n  const [userNameLogged, setUserNameLogged] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  function getFormattedDate(d) {\n    const day = d.getDate().toString();\n    const numbMonth = d.getMonth() + 1;\n    var month = \"\";\n    if (numbMonth > 9) month = numbMonth.toString();else month = \"0\" + numbMonth.toString();\n    const year = d.getFullYear().toString();\n    return year + \"-\" + month + \"-\" + day;\n  }\n  function addNote(newNote) {\n    if (newNote.title !== \"\") {\n      if (newNote.date === \"\") {\n        newNote.date = getFormattedDate(new Date());\n      }\n      if (isLoggedIn) {\n        const whichSection = sections.filter(sections => sections.title === newNote.sectionTitle);\n        const newApiNote = JSON.stringify({\n          \"userId\": user.id,\n          \"title\": newNote.title,\n          \"content\": newNote.content,\n          \"sectionTitle\": newNote.sectionTitle,\n          \"date\": newNote.date,\n          \"tkSection\": {\n            \"id\": whichSection[0].id\n          }\n        });\n        const customConfig = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        axios.post(URL + 'tknote', newApiNote, customConfig);\n      }\n      setNotes(prevNotes => {\n        return [...prevNotes, newNote];\n      });\n    } else {\n      alert(\"Please, set your new task.\");\n    }\n  }\n  function deleteNote(id) {\n    if (isLoggedIn) {\n      axios.delete(URL + 'tknote/' + id + '/m$s*a');\n    }\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return noteItem.id !== id;\n      });\n    });\n  }\n  function addSection(newSection) {\n    if (newSection.title !== \"\") {\n      if (isLoggedIn) {\n        const newApiSection = JSON.stringify({\n          \"title\": newSection.title,\n          \"tkUser\": {\n            \"id\": user.id\n          }\n        });\n        const customConfig = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        axios.post(URL + 'tksection', newApiSection, customConfig);\n      }\n      setSections(prevSections => {\n        return [...prevSections, newSection];\n      });\n    } else {\n      alert(\"Please, give a name to this new section.\");\n    }\n  }\n  function deleteSection(id) {\n    if (isLoggedIn) {\n      axios.delete(URL + 'tksection/' + id + '/m$s*a');\n    }\n    setSections(prevSections => {\n      return prevSections.filter((sectionItem, index) => {\n        return sectionItem.id !== id;\n      });\n    });\n  }\n  async function getUser(email, password) {\n    await axios.get(URL + 'tkuser/find-by-email?email=' + email + '&pssd=' + password).then(response => {\n      setUser(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    if (user.fName.length > 1) {\n      setSections(user.sections);\n      const uName = user.fName + \" \" + user.lName;\n      setUserNameLogged(uName);\n      //if((user.email).includes('.com')){\n      axios.get(URL + 'tknote/find-by-user-id/' + user.id).then(response => {\n        setNotes(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      //}\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Please, check your credentials. User not found.\\n\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        getUser: getUser,\n        userNameLogged: userNameLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateSection, {\n        onAdd: addSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote,\n      sections: sections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), sections.map((SectionItem, index) => {\n      return /*#__PURE__*/_jsxDEV(Section, {\n        id: SectionItem.id,\n        title: SectionItem.title,\n        notes: notes.filter(notes => notes.sectionTitle === SectionItem.title),\n        onDelete: deleteSection,\n        onNotesDelete: deleteNote\n      }, SectionItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CpIm1Kw6Y1P3iytEkVSEgBslVi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Header","Footer","CreateArea","CreateSection","Section","jsxDEV","_jsxDEV","URL","App","_s","notes","setNotes","sections","setSections","user","setUser","userNameLogged","setUserNameLogged","isLoggedIn","setIsLoggedIn","getFormattedDate","d","day","getDate","toString","numbMonth","getMonth","month","year","getFullYear","addNote","newNote","title","date","Date","whichSection","filter","sectionTitle","newApiNote","JSON","stringify","id","content","customConfig","headers","post","prevNotes","alert","deleteNote","delete","noteItem","index","addSection","newSection","newApiSection","prevSections","deleteSection","sectionItem","getUser","email","password","get","then","response","data","catch","err","console","log","fName","length","uName","lName","children","style","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","SectionItem","onDelete","onNotesDelete","_c","$RefreshReg$"],"sources":["C:/Users/thiag/OneDrive/Documentos/stareng_tasks_keeper_app/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport CreateArea from \"./CreateArea\";\nimport CreateSection from \"./CreateSection\";\nimport Section from \"./Section\";\n\nconst URL = 'http://localhost:8080/';\n//const URL = 'https://timing-control.herokuapp.com/';\n\nfunction App() {\n  //const DONE = \"Done / Deleted\";\n  const [notes, setNotes] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [user,setUser] = useState();\n  const [userNameLogged,setUserNameLogged] = useState(\"\");\n  const [isLoggedIn,setIsLoggedIn] = useState(false);\n\n  function getFormattedDate(d){\n    const day = d.getDate().toString();\n      const numbMonth = (d.getMonth()+1);\n      var month=\"\";\n      if(numbMonth>9)\n        month = (numbMonth).toString();\n      else\n        month = \"0\"+(numbMonth).toString();\n    const year = d.getFullYear().toString();\n    return(year+\"-\"+month+\"-\"+day);\n  }\n\n  function addNote(newNote) {\n    if(newNote.title!==\"\"){\n      if(newNote.date===\"\"){\n        newNote.date=getFormattedDate(new Date());\n      }\n      if(isLoggedIn){\n        const whichSection = sections.filter(sections => (sections.title) === newNote.sectionTitle);\n        const newApiNote = JSON.stringify(\n          { \n            \"userId\": user.id,\n            \"title\": newNote.title,\n            \"content\": newNote.content,\n            \"sectionTitle\": newNote.sectionTitle,\n            \"date\": newNote.date,\n            \"tkSection\": {\n                \"id\": whichSection[0].id\n            }\n          });\n        const customConfig = {\n            headers: {\n            'Content-Type': 'application/json'\n            }\n        };\n        axios.post(URL+'tknote', newApiNote, customConfig)\n      }\n        \n      setNotes(prevNotes => {\n        return [...prevNotes, newNote];\n      });\n\n\n    }else{\n      alert(\"Please, set your new task.\")\n    }\n  }\n\n  function deleteNote(id) {\n    if(isLoggedIn){\n      axios.delete(URL+'tknote/'+id+'/m$s*a')\n    }\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return noteItem.id !== id;\n      });\n    });\n  }\n\n  function addSection(newSection) {\n    \n    if(newSection.title!==\"\"){\n      if(isLoggedIn){\n        const newApiSection = JSON.stringify(\n          { \n            \"title\": newSection.title,\n            \"tkUser\": {\n                \"id\": user.id\n            }\n          });\n        const customConfig = {\n            headers: {\n            'Content-Type': 'application/json'\n            }\n        };\n        axios.post(URL+'tksection', newApiSection, customConfig)\n      }\n      setSections(prevSections => {\n        return [...prevSections, newSection];\n      });\n    }else{\n      alert(\"Please, give a name to this new section.\")\n    }\n  }\n  function deleteSection(id) {\n    if(isLoggedIn){\n      axios.delete(URL+'tksection/'+id+'/m$s*a')\n    }\n    setSections(prevSections => {\n      return prevSections.filter((sectionItem, index) => {\n        return sectionItem.id !== id;\n      });\n    });\n  }\n\n  async function getUser(email, password){\n      await axios\n         .get(URL+'tkuser/find-by-email?email='+email+'&pssd='+password)\n         .then((response) => {\n            setUser(response.data);\n         })\n         .catch((err) => {\n            console.log(err);\n         });\n\n      if(user.fName.length > 1){\n        setSections(user.sections);\n        const uName = user.fName+\" \"+user.lName;\n        setUserNameLogged(uName);\n        //if((user.email).includes('.com')){\n          axios\n          .get(URL+'tknote/find-by-user-id/'+user.id)\n          .then((response) => {\n            setNotes(response.data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        //}\n        setIsLoggedIn(true) \n      }else{\n        alert(\"Please, check your credentials. User not found.\\n\")\n      }\n  }\n\n  return (\n    <div>\n      <div style={{flexDirection:\"row\"}}>\n        <Header getUser={getUser} userNameLogged={userNameLogged}/>\n        <CreateSection onAdd={addSection} />\n      </div>\n        <CreateArea onAdd={addNote} sections={sections}/>\n        \n        {/* <Section \n          key={DONE}\n          id={DONE}  \n          title={DONE}\n          notes={notes.filter(notes => notes.section === DONE)}\n        /> */}\n\n      {sections.map((SectionItem, index) => {\n        return (\n          <Section \n            key={SectionItem.id}\n            id={SectionItem.id}  \n            title={SectionItem.title}\n            notes={notes.filter(notes => (notes.sectionTitle) === SectionItem.title)}\n            onDelete={deleteSection}\n            onNotesDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default (App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}